module Utils.Counter.Extra;

import Stdlib.Prelude open;
import Data.Set as Set open using {Set};
import Anoma open;
import AnomaHelpers open;

import Authorization.Message open;
import Utils.Counter.Count open;

-- TODO use nullifier instead of commitment
findCreatedCounter
  (consumedCounter : Resource)
  (_tx : Transaction)
  : Maybe Resource :=
  let
    cm : Helper.Commitment := commitment consumedCounter;
  in case
       lookupExtraData@{
         key := natToBytes32 cm;
         Value := ResourceRelationship;
         tx := _tx
       }
     of
       | nothing := nothing
       | just msg :=
         case
           Set.toList (ResourceRelationship.mustBeCreated msg)
         of
           | _ := nothing
           | [foundCm] :=
             let
               foundCounter : Resource := commitmentResource foundCm;
             in if
               | ResourceRelationship.origin msg == cm
                 && anomaKind consumedCounter == anomaKind foundCounter
                 && isCreated foundCounter _tx := just foundCounter
               | else := nothing;
