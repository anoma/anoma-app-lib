module Utils.Counter.Extra;

import Stdlib.Prelude open;
import Anoma open;
import AnomaHelpers open;

import Authorization.Message open;
import Utils.Counter.Count open;

findCreatedCounter
  (consumedCounter : Resource)
  (tx : Transaction)
  : Maybe Resource :=
  let
    selfCm : Helper.Commitment := commitment consumedCounter;
    lookupResult
      : Maybe (Pair LinkedResourceMessage Signature) :=
      lookupExtraData (natToBytes32 selfCm) tx;
  in case lookupResult of
       | nothing := nothing
       | just (msg, _) :=
         let
           foundCounter : Resource :=
             commitmentResource (LinkedResourceMessage.created msg);
         in if
           | LinkedResourceMessage.consumed msg == selfCm
             && isCreated foundCounter tx := just foundCounter
           | else := nothing;
