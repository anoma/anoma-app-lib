module Utils.Counter.Projection;

import Stdlib.Prelude open;
import Anoma.Resource open;
import Anoma.Utils open;
import Anoma.Builtin.System open;

import AnomaHelpers open;
import Utils.Counter.Label open;

--- A unique identifier (UID) characterized by a ;Nat; counter value
--- and an unique counter ;Kind;.
type UID :=
  mkUID@{
    id : Nat;
    uniqueKind : Kind
  };

--- Returns the current UID of a counter ;Resource;.
getUID (counter : Resource) : UID :=
  mkUID@{
    id := counter |> Resource.valueRef |> Ref.fromRef |> Value.unValue |> anomaDecode;
    uniqueKind := kind counter
  };
