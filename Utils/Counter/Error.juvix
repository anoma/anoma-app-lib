module Utils.Counter.Error;

import Stdlib.Prelude open;
import AnomaHelpers open;

type CounterError := ErrCounterDefault Error;

instance
CounterError-Show : Show CounterError := mkShow \ {e := "CounterError:\n" ++str Show.show e};

trait
type CounterThrowable E A := mkCounterThrowable {throw : E -> Result CounterError A};

instance
ErrorThrowable {A} : CounterThrowable Error A :=
  mkCounterThrowable@{
    throw (e : Error) : Result CounterError A := error {_} {A} (ErrCounterDefault e)
  };

open CounterThrowable public;

pass {A} (a : A) : Result CounterError A := ok a;
