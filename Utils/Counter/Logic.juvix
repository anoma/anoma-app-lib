module Utils.Counter.Logic;

import Stdlib.Prelude open;
import Anoma open;
import AnomaHelpers open;

import Utils.Counter.Count open;
import Utils.Counter.Label open;
import Utils.Counter.Extra open;

counterLogic (self : Resource) (tx : Transaction) : Bool :=
  case lifecycle self tx, ephemerality self of
    | Consumed, Ephemeral :=
      isNullifierPresent (getNullifierfFromLabel self) tx
    | Consumed, NonEphemeral :=
      case findCreatedCounter self tx of {
        | just found := isIncremented self found
        | nothing := false
      }
    | Created, Ephemeral := false
    | Created, NonEphemeral := true
    | Unknown, _ := false;
