module Utils.Counter.Logic;

import Stdlib.Prelude open;
import Anoma open;
import AnomaHelpers open;

import Utils.Counter.Count open;
import Utils.Counter.Label open;
import Utils.Counter.Extra open;

counterLogic (self : Resource) (tx : Transaction) : Bool :=
  case ephemerality self of
    | Ephemeral :=
      case lifecycle self tx of {
        | Consumed :=
          isNullifierPresent (getNullifierfFromLabel self) tx
        | _ := false
      }
    | NonEphemeral :=
      case lifecycle self tx of
        | Consumed :=
          case findCreatedCounter self tx of {
            | just found := isIncremented self found
            | nothing := false
          }
        | Created := true
        | Unknown := false;
