module Utils.Counter.Resource;

import Stdlib.Prelude open;
import Anoma open;
import AnomaHelpers open;

import Utils.Counter.Logic open;
import Utils.Counter.Label open;

mkCounter (npk : PublicKey) (eph : Bool) (uniqueLabel : Label) (count : Nat) : Resource :=
  Resource.mk@{
    logic := counterLogic;
    label := anomaEncode (uniqueLabel);
    quantity := 1;
    data := count;
    eph;
    npk;
    nonce := rand;
    rseed := rand
  };

isCounter (resource : Resource) : Bool :=
  let
    uniqueKind : Kind := anomaKind resource;
    logic : Resource -> Transaction -> Bool := Kind.toLogic uniqueKind;
  in anomaEncode logic == anomaEncode counterLogic;
