module Applib.Utils.Counter.Label;

import Stdlib.Prelude open;
import Anoma.Resource open;
import Anoma.Builtin.System open;
import Applib.Authorization.Identities open;

-- TODO Make an unique trait that requires the label to contain an nullifier.
type CounterLabel := mkCounterLabel@{nullifier : Nullifier};

createUniqueCounterLabel (consumable : Resource) : CounterLabel :=
  mkCounterLabel (nullifier (toNullifierKey Universal.identity) consumable);

instance
CounterLabel-Eq : Eq CounterLabel :=
  mkEq@{
    eq (lhs rhs : CounterLabel) : Bool := CounterLabel.nullifier lhs == CounterLabel.nullifier rhs
  };

getCounterLabel (resource : Resource) : CounterLabel :=
  resource |> Resource.labelRef |> LabelRef.unLabelRef |> anomaEncode |> anomaDecode;

getNullifierfFromLabel (resource : Resource) : Nullifier :=
  resource |> getCounterLabel |> CounterLabel.nullifier;
