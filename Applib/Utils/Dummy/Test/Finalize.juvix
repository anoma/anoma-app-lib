module Applib.Utils.Dummy.Test.Finalize;

import Stdlib.Prelude open;
import Stdlib.Debug.Fail open;

import Anoma.Identity open;
import Anoma.Resource open;
import Anoma.Transaction open;
import Anoma.State.CommitmentTree open;

import Applib.Helpers open;
import Applib.Authorization.Identities open;
import Applib.Utils.Dummy.Resource open;

import Applib.Utils.Dummy.Transaction.Finalize open;

import Applib.Utils.Dummy.Test.Initialize open;

oldRandSeed : RandSeed := mkRandSeed 0;

oldDummy : Resource := dummy@Resource{randSeed := oldRandSeed};

newRoot : Root := mkRoot 1;

standardInputs' : StandardInputs := standardInputs@StandardInputs{currentRoot := newRoot};

main : Transaction :=
  finalize@{
    standardInputs := standardInputs';
    dummy := oldDummy
  };
