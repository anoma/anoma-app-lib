module Applib.Utils.Dummy.Example;

import Stdlib.Prelude open;
import Stdlib.Debug.Fail open;


{}
type FunctionSelector :=
  | Initialize
  | Finalize
  | INVALID;

main (funcSelector : Nat) (args : List Nat) : AnomaTransaction :=
  let
    toFunctionSelector (n : Nat) : FunctionSelector :=
      if
        | n == 0 := Initialize
        | n == 1 := Finalize
        | else := INVALID;
  in case toFunctionSelector funcSelector, args of {
       | Initialize, [a1; a2] :=
         Kudos.initialize@{
           standardInputs := anomaDecode a1;
           dummy := anomaDecode a2;
           receiver := anomaDecode a3
         }
       | Finalize, [a1; a2] :=
         Kudos.finalize@{
           standardInputs := anomaDecode a1;
           token := anomaDecode a2
         }