module Intent.Swap.Solution;

import Stdlib.Prelude open;
import Stdlib.Data.Set as Set open using {Set};
import Anoma.Identity open;
import Anoma.Transaction open;

import Transaction.Traits open;
import Token.Transaction open;
import Token.Resource open;
import Intent.Swap.Resource open;

import AnomaHelpers open;

module Solution;
  -- TODO generalize
  type Solution :=
    mk@{
      intent : SwapIntent;
      created : Set Token
    };

  toAction (standardInputs : StandardInputs) (solution : Solution) : Action :=
    let
      consumed := Set.singleton (Solution.intent solution);
      created := Solution.created solution;
    in ActionConvertable.toAction standardInputs consumed created;

  open Solution public;
end;

open Solution using {Solution} public;
