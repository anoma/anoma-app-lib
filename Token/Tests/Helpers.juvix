module Token.Tests.Helpers;

import Stdlib.Prelude open;
import Anoma open;
import Test.JuvixUnit open;

import Authorization.Identities open;
import Resource.Traits open;
import Token.Label open;
import Token.Resource open;

import Utils.Dummy.Resource open;

nf : Nullifier :=
  Nullifier.mk@{
    unNullifier := 123
  };

self : KeyPair := Universal.keyPair;

makeExampleDummy (self : KeyPair) : Pair Resource Nullifier :=
  let
    dummy : Resource :=
      mkDummy@{
        npk := KeyPair.pubKey self;
        eph := false
      };
    nf : Nullifier :=
      nullifier@{
        r := dummy;
        privateKey := KeyPair.privKey self
      };
  in dummy, nf;

makeExampleLabel
  (originator : PublicKey)
  {supply : Supply := Unbound}
  {transferability : Transferability := Transferability.Transferable}
  : Label :=
  mkLabel@{
    name := "Kudos";
    symbol := "KDS";
    decimals := 18;
    supply;
    transferability;
    originator
  };

makeExampleToken (self : KeyPair) (label : Label) : Token :=
  Token.create@{
    quantity := 1;
    tokenLabel := label;
    npk := KeyPair.pubKey self
  };
